{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dell/Documents/GitHub/starriselab/components/ui/form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Form = registerClientReference(\n    function() { throw new Error(\"Attempted to call Form() from the server but Form is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"Form\",\n);\nexport const FormControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormControl() from the server but FormControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormControl\",\n);\nexport const FormDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormDescription() from the server but FormDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormDescription\",\n);\nexport const FormField = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormField() from the server but FormField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormField\",\n);\nexport const FormItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormItem() from the server but FormItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormItem\",\n);\nexport const FormLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormLabel() from the server but FormLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormLabel\",\n);\nexport const FormMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormMessage() from the server but FormMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"FormMessage\",\n);\nexport const useFormField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormField() from the server but useFormField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx <module evaluation>\",\n    \"useFormField\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wDACA","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dell/Documents/GitHub/starriselab/components/ui/form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Form = registerClientReference(\n    function() { throw new Error(\"Attempted to call Form() from the server but Form is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"Form\",\n);\nexport const FormControl = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormControl() from the server but FormControl is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormControl\",\n);\nexport const FormDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormDescription() from the server but FormDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormDescription\",\n);\nexport const FormField = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormField() from the server but FormField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormField\",\n);\nexport const FormItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormItem() from the server but FormItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormItem\",\n);\nexport const FormLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormLabel() from the server but FormLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormLabel\",\n);\nexport const FormMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormMessage() from the server but FormMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"FormMessage\",\n);\nexport const useFormField = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFormField() from the server but useFormField is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/form.tsx\",\n    \"useFormField\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oCACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oCACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oCACA","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dell/Documents/GitHub/starriselab/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dell/Documents/GitHub/starriselab/components/register-form.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card'\r\nimport { Form, FormControl, FormField, FormItem, FormLabel } from './ui/form'\r\nimport { Input } from './ui/input'\r\nimport { Button } from './ui/button'\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select'\r\nimport { Checkbox } from './ui/checkbox'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst RegisterForm = () => {\r\n  const form = useForm()\r\n\r\n  return (\r\n    <div className=\"container py-10\">\r\n      <Card className=\"max-w-4xl mx-auto\">\r\n        <CardHeader className=\"text-center space-y-2\">\r\n          <CardTitle className=\"text-4xl font-bold\">APPLICATION FORM</CardTitle>\r\n          <CardDescription className=\"text-xl\">Ready to apply? Hooray! We look forward to meeting you.</CardDescription>\r\n        </CardHeader>\r\n\r\n        <CardContent>\r\n          <div className=\"flex items-center gap-2 text-sm text-muted-foreground mb-8\">\r\n            <span className=\"size-5 rounded-full bg-primary/10 flex items-center justify-center\">⏱</span>\r\n            Estimated Time to Complete: 2 min (Part-Time) | 10 min (Bootcamp)\r\n          </div>\r\n\r\n          <Form {...form}>\r\n            <form className=\"space-y-6\">\r\n              <FormField\r\n                name=\"fullName\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Full Name</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Full Name\" {...field} />\r\n                    </FormControl>\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <div className=\"grid md:grid-cols-2 gap-6\">\r\n                <FormField\r\n                  name=\"email\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Email</FormLabel>\r\n                      <FormControl>\r\n                        <Input type=\"email\" placeholder=\"Email\" {...field} />\r\n                      </FormControl>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  name=\"phone\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Phone Number</FormLabel>\r\n                      <FormControl>\r\n                        <Input placeholder=\"Phone Number\" {...field} />\r\n                      </FormControl>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid md:grid-cols-2 gap-6\">\r\n                <FormField\r\n                  name=\"city\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Where are you applying from?</FormLabel>\r\n                      <FormControl>\r\n                        <Input placeholder=\"City Name\" {...field} />\r\n                      </FormControl>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  name=\"birthYear\"\r\n                  render={({ field }) => (\r\n                    <FormItem>\r\n                      <FormLabel>Which year were you born?</FormLabel>\r\n                      <Select onValueChange={field.onChange}>\r\n                        <FormControl>\r\n                          <SelectTrigger>\r\n                            <SelectValue placeholder=\"Select a year\" />\r\n                          </SelectTrigger>\r\n                        </FormControl>\r\n                        <SelectContent>\r\n                          {Array.from({ length: 50 }, (_, i) => new Date().getFullYear() - 50 + i).map(year => (\r\n                            <SelectItem key={year} value={year.toString()}>\r\n                              {year}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                <FormField\r\n                  name=\"newsletter\"\r\n                  render={({ field }) => (\r\n                    <FormItem className=\"flex items-start space-x-3 space-y-0\">\r\n                      <FormControl>\r\n                        <Checkbox checked={field.value} onCheckedChange={field.onChange} />\r\n                      </FormControl>\r\n                      <div className=\"space-y-1 leading-none\">\r\n                        <FormLabel>Subscribe to our Newsletter</FormLabel>\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                          we promise to only send you the good stuff.\r\n                        </p>\r\n                      </div>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n\r\n                <FormField\r\n                  name=\"consent\"\r\n                  render={({ field }) => (\r\n                    <FormItem className=\"flex items-start space-x-3 space-y-0\">\r\n                      <FormControl>\r\n                        <Checkbox checked={field.value} onCheckedChange={field.onChange} />\r\n                      </FormControl>\r\n                      <div className=\"space-y-1 leading-none\">\r\n                        <FormLabel>I consent to receive phone and text communications regarding my application.</FormLabel>\r\n                      </div>\r\n                    </FormItem>\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <Button type=\"submit\" className=\"w-full md:w-auto float-right\">Begin</Button>\r\n            </form>\r\n          </Form>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dell/Documents/GitHub/starriselab/components/register-hero.tsx"],"sourcesContent":["import React from 'react'\r\nimport SlideIn from './motion/SlideIn'\r\nimport { Button } from './ui/button'\r\nimport Link from 'next/link'\r\n\r\nconst RegisterHero = () => {\r\n  return (\r\n    <section className=\"flex h-[40vh] bg-[url(/images/hero.jpg)] bg-cover w-full bg-center relative\">\r\n            <div className=\"absolute inset-0  bg-gradient-to-r from-primary max-md:to-black/40 \">\r\n                <div className=\"structure flex flex-row h-full justify-between items-center z-30\">\r\n                    <div>\r\n                       <h5>Application Form</h5>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n  )\r\n}\r\n\r\nexport default RegisterHero"],"names":[],"mappings":";;;;;AAKA,MAAM,eAAe;IACnB,qBACE,8OAAC;QAAQ,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;8BACE,cAAA,8OAAC;kCAAG;;;;;;;;;;;;;;;;;;;;;;;;;;AAS3B;uCAEe","debugId":null}},
    {"offset": {"line": 667, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Dell/Documents/GitHub/starriselab/app/%28root%29/register/page.tsx"],"sourcesContent":["import RegisterForm from '@/components/register-form'\r\nimport Form from '@/components/register-form'\r\nimport RegisterHero from '@/components/register-hero'\r\nimport React from 'react'\r\n\r\nconst page = () => {\r\n  return (\r\n    <section>\r\n      <RegisterHero />\r\n      <RegisterForm />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default page"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAGA,MAAM,OAAO;IACX,qBACE,8OAAC;;0BACC,8OAAC,+HAAA,CAAA,UAAY;;;;;0BACb,8OAAC,+HAAA,CAAA,UAAY;;;;;;;;;;;AAGnB;uCAEe","debugId":null}}]
}